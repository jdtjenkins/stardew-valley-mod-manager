TODO:
	- Make the app into feature based file system [Done]
	- Add shared ui components [Done]
	- Add design to make it look like SV [Done]
	- Add tests for code n stuff [In Progress]
	- Add web workers for all native API stuff [In Progress - not sure if possible at the moment, problems with libraries running in workers]
	- Add file system service [In Progress]
	- Add vue router to make expansion easier
	- Make button icons global classes or something [Done]
	- Progress bar for installing zip mods
	- Alert messages, alert message when mod finishes uploading
	- Refresh after uploading zip

Features
	- Download straight from Nexus
	- Can tell you when mods are out of date
	- Mod load order (? is this even possible)
	- Mod profiles, loading/unloading of profiles of mods [MVP]
	- Launch game from webpage??????
	- Create symlink / Be able to use program files mod location
	- Add mod to profile by selecting a local zip file [MVP] [Done]
	- Marking installed mods as inactive [MVP] - This will pretty much just be part of the profiles work
	- FAQ / Support page [MVP]
	- Nice Tour feature

	Creating mod feature
		We can use the xnbcli code to create a feature whereby people can easily package and create mods using a web gui.
