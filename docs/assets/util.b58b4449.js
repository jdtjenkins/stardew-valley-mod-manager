const e={INVALID:["seeking position failed.","InvalidStateError"],GONE:["A requested file or directory could not be found at the time an operation was processed.","NotFoundError"],MISMATCH:["The path supplied exists, but was not an entry of requested type.","TypeMismatchError"],MOD_ERR:["The object can not be modified in this way.","InvalidModificationError"],SYNTAX:e=>["Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. "+e,"SyntaxError"],SECURITY:["It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.","SecurityError"],DISALLOWED:["The request is not allowed by the user agent or the platform in the current context.","NotAllowedError"]};async function t(e){const[t,n,r]=await Promise.all([import("./memory.73a9ec9e.js"),import("./sandbox.3c16a79f.js"),import("./index.c9c4f268.js").then((function(e){return e.a}))]),i=new t.FolderHandle("",!1);return i.entries=e.map(e=>e.isFile?new n.FileHandle(e,!1):new n.FolderHandle(e,!1)),new r.default(i)}async function n(e){const{FolderHandle:t,FileHandle:n}=await import("./memory.73a9ec9e.js"),r=await import("./index.c9c4f268.js").then((function(e){return e.a})),i=await import("./index.c9c4f268.js").then((function(e){return e.F})),a=r.default,o=i.default;let s=[...e.files];if(e.webkitdirectory){const e=s[0].webkitRelativePath.split("/",1)[0],r=new t(e,!1);return s.forEach(e=>{const i=e.webkitRelativePath.split("/");i.shift();const a=i.pop();i.reduce((e,n)=>(e.entries[n]||(e.entries[n]=new t(n,!1)),e.entries[n]),r).entries[a]=new n(e.name,e,!1)}),new a(r)}{const t=Array.from(e.files).map(e=>new o(new n(e.name,e,!1)));return e.multiple?t:t[0]}}export{e as errors,t as fromDataTransfer,n as fromInput};
